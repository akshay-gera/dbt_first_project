version: 2

models:
  - name: dim_listings_cleansed
    description: Contains cleaned version from listings and modelled to be DImension table
    columns:
      - name: listing_id
        tests:
          - not_null
          - unique
        description: Id of listing

      - name: host_id
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id
        description: Host ID should in DIM_listings_cleansed should have a relationship between DIM_hosts_Cleansed

      - name: room_type
        tests:
          - accepted_values:
              values:
                - Entire home/apt
                - Hotel room
                - Private room
                - Shared room

      - name: minimum_nights
        tests:
          - positive_value
        description: Referencing a macro called positive values test that we have put up to check for any value below 1 because the listing should always have atleast 1 minimum nights

  - name: fct_reviews
    description: Named as a FACT Table out of reviews due to nature of its data. Contains reviews of customers who stayed at the airbnb
    columns:
      - name: review_id
        description: Primary Key generated through DBT utils package resulting as a combination of all columns of the table
        data_type: varchar

      - name: listing_id
        description: Listing ID of the listing. Multiple ID since each listing can get multiple reviews
        data_type: number

      - name: review_date
        data_type: timestamp_ntz

      - name: reviewer_name
        data_type: varchar

      - name: review_text
        data_type: varchar

      - name: review_sentiment
        data_type: varchar
  - name: dim_hosts_cleansed
    description: Dimension table of details about hosts having their airbnb places listed on the platform
    columns:
      - name: host_id
        description: Unique ID of the host
        tests:
        - unique
        - not_null
        data_type: number
      
      - name: host_name
        description: Name of the host
        data_type: varchar
        tests:
          - not_null
      
      - name: is_superhost
        description: A superhost if a well-reviewed place with a responsive host
        data_type: varchar
        tests:
          - accepted_values:
              values:
                - t 
                - f
      
      - name: created_at
        description: Hosted placed when turned live
        data_type: timestamp_ntz
      
      - name: updated_at
        description: Last updated timestamp
        data_type: timestamp_ntz

# Using the calogica github dbt-expectations functions to put on some tests on different columns column 
  - name: dim_listings_w_hosts
    description: Table with listings and hosts information to be used as a dimension table
    # making sure the row count of table matches to row count of source data airbnb listings
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source("airbnb", "listings")
    
    # Making sure the 99% of price values in our data are between 50 and 500
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: .99
              min_value: 50
              max_value: 500
          
          - dbt_expectations.expect_column_max_to_be_between: 
              max_value: 5000
              # We don't want a panick situation of a test returning failure but a warning that a listing might be expensive than 5000
              config:
                severity: warn
          
          # we wanna make sure the table has price in number format consitent with snowflake schema
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
